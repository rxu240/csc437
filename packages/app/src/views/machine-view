// src/views/traveler-view.ts
import { define, View } from "@calpoly/mustang";
import { css, html } from "lit";
import { property, state } from "lit/decorators.js";
import { Traveler } from "server/models";
import { Msg } from "../messages";
import { Model } from "../model";

export class MachineViewElement extends View<Model, Msg> {
  @property({attribute: "user-id"})
  userid?: string;

  @state()
  get profile(): Credential | undefined {
    return this.model.profile;
  }

  constructor() {
    super("rxu240-model");
  }

  render() {
    return html`
    `;
  }

  attributeChangedCallback(
    name: string,
    oldValue: string,
    newValue: string
    ) {
    super.attributeChangedCallback(name, oldValue, newValue);
    if (
        name === "user-id" &&
        oldValue !== newValue &&
        newValue
    ) {
        this.dispatchMessage([
        "profile/select",
        { userid: newValue }
        ]);
    }
    }
  // etc
}